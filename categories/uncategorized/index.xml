<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Uncategorized on LeaveIt</title>
    <link>https://totoroliux.github.io/categories/uncategorized/</link>
    <description>Recent content in Uncategorized on LeaveIt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh_cn</language>
    <lastBuildDate>Thu, 25 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://totoroliux.github.io/categories/uncategorized/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>自我训练计划</title>
      <link>https://totoroliux.github.io/2019/%E8%87%AA%E8%AE%AD%E8%AE%A1%E5%88%92/</link>
      <pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://totoroliux.github.io/2019/%E8%87%AA%E8%AE%AD%E8%AE%A1%E5%88%92/</guid>
      <description> 自训计划    SUN MON TUE WED THU FRI SAT     球赛 球感 速度 健身房 球感 速度 踢球 力量 训练 力量 球赛   21 22 23 24 25 26 27   &amp;mdash;&amp;mdash; &amp;mdash;&amp;mdash; &amp;mdash;&amp;mdash; &amp;radic; &amp;mdash;&amp;mdash; &amp;mdash;&amp;mdash; &amp;mdash;&amp;mdash;   28 29 30   26 27    </description>
    </item>
    
    <item>
      <title>Git学习笔记</title>
      <link>https://totoroliux.github.io/2019/git/</link>
      <pubDate>Sun, 21 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://totoroliux.github.io/2019/git/</guid>
      <description> Git学习 最近学习利用github page搭建自己的个人博客，以前学习过一点Git，但没有深入学习，这次搭建个人网站时遇到一些问题，打算把这些问题以及个人解决方法记录下来。
 刚写该博客就产生了一个错误，尴尬！！！ 之前学习时使用得是英文，换成中文后提示出错，因此错误原因很可能是编码出错，可能的解决方案如下
 config.toml 里面有一个参数可以设置语言代码(LanguageCode) hugo本身有些设置可以处理编码，需要在网络上查找 编辑器编码设置，我在Windows下第一次使用Vim，不知道怎么设置(最开始因为对Vim不熟悉没去设置导致绕了很大弯路)  </description>
    </item>
    
    <item>
      <title>Latex for Academic</title>
      <link>https://totoroliux.github.io/2019/latex/</link>
      <pubDate>Sun, 21 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://totoroliux.github.io/2019/latex/</guid>
      <description>Bibliographic Style &amp;rdquo;&amp;rsquo; \usepackage[numbers]{natbib} # the numbered scheme \usepackage[authoryear]{natbib} # the author-year scheme \usepackage[authoryear,longnamesfirst]{natbib} &amp;ldquo;&amp;rsquo;</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://totoroliux.github.io/2014/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://totoroliux.github.io/2014/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://totoroliux.github.io/2014/goisforlovers/</link>
      <pubDate>Mon, 28 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://totoroliux.github.io/2014/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://totoroliux.github.io/2014/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://totoroliux.github.io/2014/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://totoroliux.github.io/2014/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://totoroliux.github.io/2014/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
  </channel>
</rss>